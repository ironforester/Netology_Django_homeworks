name: Djungo deploy

on:
  push:
    branches:
      - ci

jobs:
  tests:
    runs-on: ubuntu-22.04
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
          ports:
            - 5432:5432
          options:
            --health-cmd pg_isready
            --health-interval 5s
            --health-timeout 5s
            --health-retries 5
          steps:
            - name: Проверка репозитория на наличие обновлений
              uses: actions/checkout@v3

            - name: Установка Python
              uses: actions/setup-python@v3
              with:
                python-version: 3.8

            - name: Установка зависимостей
              run: pip install -r requirements.txt

            - name: Линтинг
              run: flake8 dj-homeworks/3.2-crud/stocks_products/logistic --exclude=dj-homeworks/3.2-crud/stocks_products/logistic/migrations

            - name: Тестирование
              run: python manage.py test
              env:
                SECRET_KEY: ${{ env.SECRET_KEY }}
                DEBUG: ${{ env.DEBUG }}
                ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
                DB_ENGINE: ${{ env.DB_ENGINE }}
                DB_USER: ${{ env.DB_USER }}
                DB_PASSWORD: ${{ env.DB_PASSWORD }}
                DB_NAME: ${{ env.DB_NAME }}
                DB_HOST: ${{ env.DB_HOST }}
                DB_PORT: ${{ env.DB_PORT }}

            - name: Деплой
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                password: ${{ secrets.SSH_PASSWORD }}
                script: PASSWORD="$password" expect /home/sano/Netology_Django_homeworks/3.2-crud/stocks_products/deploy.exp